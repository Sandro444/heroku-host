{"version":3,"sources":["services.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","personObject","post","id","put","delete","Notification","message","className","PersonsList","persons","handleDelete","length","map","person","key","name","number","onClick","e","Form","addPerson","newName","nameChangeHandler","newNumber","numberChangeHandler","onSubmit","value","onChange","required","type","Filter","searchValue","searchChange","filter","toLowerCase","indexOf","item","App","useState","setPersons","setNewName","setNewNumber","setSearchValue","setMessage","useEffect","personService","target","preventDefault","catch","error","concat","window","confirm","updatePerson","find","updatedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c126c78.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst baseURL = \"http://localhost:3001/api/persons\"\r\n\r\nconst getPersons = () => {\r\n    let request = axios.get(baseURL)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst createPerson = (personObject) => {\r\n    let request = axios.post(baseURL, personObject)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst updatePerson = (id, personObject) => {\r\n    let request = axios.put(`${baseURL}/${id}`, personObject)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    let request = axios.delete(`${baseURL}/${id}`)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nexport default {getPersons, createPerson, updatePerson, deletePerson}","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport personService from \"./services\";\r\n\r\nconst Notification = ({ message }) => {\r\n    return message == \"\" ? \"\" : <div className=\"message\">{message}</div>;\r\n};\r\n\r\nconst PersonsList = ({ persons, handleDelete }) => {\r\n    return (\r\n        <>\r\n            {persons.length > 0\r\n                ? persons.map((person) => {\r\n                      return (\r\n                          <li key={person.name}>\r\n                              {person.name} - {person.number}{\" \"}\r\n                              <button onClick={(e) => handleDelete(person.id)}>\r\n                                  delete\r\n                              </button>\r\n                          </li>\r\n                      );\r\n                  })\r\n                : null}\r\n        </>\r\n    );\r\n};\r\n\r\nconst Form = ({\r\n    addPerson,\r\n    newName,\r\n    nameChangeHandler,\r\n    newNumber,\r\n    numberChangeHandler,\r\n}) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name:{\" \"}\r\n                <input\r\n                    value={newName}\r\n                    onChange={(e) => nameChangeHandler(e)}\r\n                    required\r\n                />\r\n                <div>\r\n                    number:{\" \"}\r\n                    <input\r\n                        type=\"number\"\r\n                        value={newNumber}\r\n                        onChange={numberChangeHandler}\r\n                        required\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst Filter = ({ persons, searchValue, searchChange }) => {\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                value={searchValue}\r\n                onChange={searchChange}\r\n            ></input>\r\n            {searchValue.length > 0\r\n                ? persons\r\n                      .filter((person) => {\r\n                          return (\r\n                              person.name\r\n                                  .toLowerCase()\r\n                                  .indexOf(searchValue.toLowerCase()) >= 0\r\n                          );\r\n                      })\r\n                      .map((item) => (\r\n                          <li key={item.name}>\r\n                              {\" \"}\r\n                              {item.name} - {item.number}{\" \"}\r\n                          </li>\r\n                      ))\r\n                : \"\"}\r\n        </>\r\n    );\r\n};\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newNumber, setNewNumber] = useState(\"\");\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        personService.getPersons().then((response) => setPersons(response));\r\n    }, []);\r\n\r\n    const searchChange = (e) => {\r\n        setSearchValue(e.target.value);\r\n    };\r\n    const addPerson = (e) => {\r\n        e.preventDefault();\r\n        let checkName = persons.filter((person) => person.name === newName);\r\n        if (checkName.length <= 0) {\r\n            personService\r\n                .createPerson({\r\n                    name: newName,\r\n                    number: newNumber,\r\n                })\r\n                .catch((e) => setMessage(e.response.data.error))\r\n                .then((response) => {\r\n                    if (response) {\r\n                        setPersons(persons.concat(response));\r\n                        setMessage(`${newName} added to DB`);\r\n                    }\r\n                });\r\n\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n        } else {\r\n            if (\r\n                window.confirm(\r\n                    `${newName} is already in the phonebook. Do you want to change old number with new one?`\r\n                )\r\n            ) {\r\n                let updatePerson = { name: newName, number: newNumber };\r\n                let { id } = persons.find(\r\n                    (person) => person.name == updatePerson.name\r\n                );\r\n                personService\r\n                    .updatePerson(id, updatePerson)\r\n                    .then((updatedPerson) =>\r\n                        setPersons(\r\n                            persons.map((person) =>\r\n                                person.id !== id ? person : updatedPerson\r\n                            )\r\n                        )\r\n                    );\r\n            }\r\n        }\r\n    };\r\n\r\n    const nameChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        setNewName(e.target.value);\r\n    };\r\n\r\n    const numberChangeHandler = (e) => {\r\n        e.preventDefault();\r\n        setNewNumber(e.target.value);\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        let person = persons.find((person) => person.id == id);\r\n        if (window.confirm(`do you realy want to delete ${person.name}?`)) {\r\n            personService.deletePerson(id).then((response) => {\r\n                personService.getPersons().then((data) => {\r\n                    setPersons(data);\r\n                    setMessage(`${person.name} deleted from DB`);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n\r\n            <h3>Search</h3>\r\n            <Filter\r\n                persons={persons}\r\n                searchValue={searchValue}\r\n                searchChange={searchChange}\r\n            />\r\n            <h3>Add Person</h3>\r\n            <Notification message={message} />\r\n            <Form\r\n                addPerson={addPerson}\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                nameChangeHandler={nameChangeHandler}\r\n                numberChangeHandler={numberChangeHandler}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <PersonsList persons={persons} handleDelete={handleDelete} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}